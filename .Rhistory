dir(file = '~/Documents/MSPA/PREDICT 410/Data')
dir(file = '~/Documents/MSPA/PREDICT 410')
dir(file = '~/Documents/MSPA')
??dir
dir(path = '~/Documents/MSPA/PREDICT 410/Data')
production <- readr::read_csv2(file = '~/Documents/MSPA/PREDICT 410/Data/production.txt')
View(production)
production <- readr::read_delim(file = '~/Documents/MSPA/PREDICT 410/Data/production.txt',delim = " ")
View(production)
install.packages("dplyr")
df <- read.csv(file = '~/Documents/MSPA/PREDICT 410/Data',sep = "")
df <- read.csv(file = '~/Documents/MSPA/PREDICT 410/Data/production.txt',sep = "")
View(df)
production <- readr::read_delim(file = '~/Documents/MSPA/PREDICT 410/Data/production.txt',delim = "")
production <- readr::read_table(file = '~/Documents/MSPA/PREDICT 410/Data/production.txt',delim = "")
production <- readr::read_table(file = '~/Documents/MSPA/PREDICT 410/Data/production.txt')
df <- read.csv(file = '~/Documents/MSPA/PREDICT 410/Data/production.txt',sep = "")
df <- dplyr::data_frame(df)
df <- dplyr::as_data_frame(df)
dplyr::tibble(df)
View(df)
str(df)
View(production)
View(df)
install.packages("ggplot2")
ggplot2::ggplot(df) + geom_point(mapping = aes(x = RunSize, y = RunTime))
library(ggplot2)
ggplot2::ggplot(df) + geom_point(mapping = aes(x = RunSize, y = RunTime))
lnfit <- lm(data = df,RunSize ~RunTime)
lnfit
summary(lnfit)
library(broom)
install.packages("broom")
broom::tidy(lnfit)
broom::augment(lnfit)
broom::glance(lnfit)
anova(lnfit)
summary(lnfit)
lnfit
lnfit$model
broom::tidy(lnfit)
broom::tidy(summary(lnfit))
summary(lnfit)
lnfit <- lm(data = df,RunTimw ~RunSize)
lnfit <- lm(data = df,RunTime ~RunSize)
summary(lnfit)
ggplot2::ggplot(df,mapping = aes(x = RunSize, y = RunTime)) + geom_point() + geom_smooth(method = "lm")
ggplot2::ggplot(df,mapping = aes(x = RunSize, y = RunTime)) + geom_point() + geom_smooth()
install.packages("alr4")
df <- read.csv(file = '~/Documents/MSPA/PREDICT 410/Data/production.txt',sep = "")
View(df)
df <- readr::read_csv(file = 'linear_regression_5e_data_sets/Chapter 2/Examples/data-ex-2-1 (Rocket Prop).csv')
View(df)
model <- lm(`Shear Strength`~ `Age of Propellant`, df)
broom::tidy(model)
model$coefficients
model$effects
model$qr
anova(model)
summary(model)
broom::augment(model)
library (ggplot2)
ggplot(data = df,mapping = aes(x = `Age of Propellant`, y = `Shear Strength`)) + geom_point() + geom_smooth(method = 'lm',color = 'Red') + theme_bw()
summary.lm(model)
broom::confint_tidy(model)
modelResult <- broom::augment(model)
model$fitted.values[1]
modelResult$.fitted[1]
modelResult$.fitted[1] + 2.101*modelResult$.se.fit[1]
predict.lm(model,3,interval = "confidence")
install.packages("knitr")
install.packages("rmarkdown")
ames <- readr::read_csv2(file = 'ames_housing_data.csv')
colnames(ames)
colnames(ames)
cols <- colnames(ames)
cols <- as.data.frame(cols)
View(cols)
View(ames)
ames <- readr::read_csv2(file = 'ames_housing_data.csv',sep = ",")
ames <- readr::read_csv(file = 'ames_housing_data.csv',sep = ",")
readr::read_delim(file = 'ames_housing_data.csv', delim = ",")
ames <- readr::read_delim(file = 'ames_housing_data.csv', delim = ",")
View(ames)
readr::cols(ames)
readr::cols_condense(ames)
readr::spec(ames)
s<- readr::spec(ames)
s$cols
install.packages("Hmisc")
Hmisc::contents(ames)
Hmisc::contents(ames)
Hmisc::contents.data.frame(ames)
s <-Hmisc::contents.data.frame(ames)
s <- dplyr::tibble(s)
View(s)
s <- dplyr::tibble(s)
s <-Hmisc::contents.data.frame(ames)
print(s)
sdf <- as.data.frame(print(s))
broom::tidy(s)
as.table(s)
as.data.frame(s)
class(s)
s <-Hmisc::contents.data.frame(ames)
ames <- readr::read_delim(file = 'ames_housing_data.csv', delim = ",")
s <-Hmisc::contents.data.frame(ames)
s
str(ames)
ames <- readr::read_delim(file = 'ames_housing_data.csv', delim = ",")
spec(ames)
spec()
readr::spec(ames)
ames <- dplyr::as_data_frame(ames)
View(ames)
str(ames)
knitr::opts_chunk$set(echo = FALSE)
ames %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(total.count = n())
library(magrittr)
ames %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(total.count = n())
library(magrittr)
ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(total.count = n())
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(total.count = n())
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(total.count = n())
knitr::kable(waterfall)
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
knitr::kable(waterfall)
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
waterfall
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
knitr::kable(waterfall)
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
knitr::kable(waterfall, align = c("l", "r"))
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
knitr::kable(waterfall, align = c("l", "r"),caption = "Drop waterfall")
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
knitr::kable(waterfall, align = c("l", "r"),caption = "Drop waterfall")
knitr::opts_chunk$set(echo = FALSE)
library(magrittr)
ames <- readr::read_delim(file = 'ames_housing_data.csv', delim = ",")
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
knitr::kable(waterfall, align = c("l", "r"),caption = "Drop waterfall")
Hmisc::cumcategory(ames)
Hmisc::cumcategory(ames)
Hmisc::contents(ames)
Hmisc::describe(ames)
Hmisc::describe(ames$Zoning)
knitr::opts_chunk$set(echo = FALSE)
ames <- readr::read_delim(file = 'ames_housing_data.csv', delim = ",")
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
# Print waterfall table
knitr::kable(waterfall, align = c("l", "r"),caption = "Drop waterfall")
# sample population
df <- dplyr::filter(ames,Zoning != 'RL')
knitr::kable(Hmisc::describe(df$Zoning))
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
# Print waterfall table
knitr::kable(waterfall, align = c("l", "r"),caption = "Drop waterfall")
# sample population
df <- dplyr::filter(ames,Zoning != 'RL')
knitr::kable(Hmisc::describe(df$Zoning,tabular = T))
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
# Print waterfall table
knitr::kable(waterfall, align = c("l", "r"),caption = "Drop waterfall")
# sample population
df <- dplyr::filter(ames,Zoning != 'RL')
Hmisc::describe(df$Zoning,tabular = T)
cb(ames)
install.packages("mosaic")
mosaic::dfapply(ames,favstats)
library(mosaic)
mosaic::dfapply(ames,favstats)
do.call(rbind,dfapply(ames,favstats))
test <- do.call(rbind,dfapply(ames,favstats))
View(test)
write.csv(file = 'columnstats.csv',test)
install.packages("iplots")
library(iplots)
colsofinterest <- c('LotArea'
, 'LotConfig'
, 'Neighborhood'
, 'HouseStyle'
, 'OverallCond'
, 'YearRemodel'
, 'TotalBsmtSF'
, 'GrLivArea'
, 'BsmtFullBath'
, 'BsmtHalfBath'
, 'FullBath'
, 'HalfBath'
, 'BedroomAbvGr'
, 'KitchenQual'
, 'TotRmsAbvGrd'
, 'GarageCars'
, 'MoSold'
, 'YrSold'
, 'SaleCondition'
, 'SalePrice')
SampleFrame <- dplyr::select(data = SampledPop,colnames(SampledPop) %in% colsofinterest)
SampledPop <- dplyr::filter(ames,Zoning != 'RL')
SampleFrame <- dplyr::select(data = SampledPop,colnames(SampledPop) %in% colsofinterest)
SampleFrame <- dplyr::select(data = SampledPop,colsofinterest)
SampleFrame <- select(data = SampledPop,colsofinterest)
SampleFrame <- select_vars(data = SampledPop,colsofinterest)
SampleFrame <- select_(data = SampledPop,.dots = colsofinterest)
SampleFrame <- SapledPop %>% select_(.dots = colsofinterest)
SampleFrame <- SampledPop %>% select_(.dots = colsofinterest)
View(SampleFrame)
knitr::opts_chunk$set(echo = FALSE)
ames <- readr::read_delim(file = 'ames_housing_data.csv', delim = ",")
# chamge from scientic notations, to restore to default options(scipen = 0)
options(scipen = 999)
library(magrittr)
waterfall <- ames %>%
dplyr::filter(Zoning != 'RL') %>%
dplyr::group_by(Zoning) %>%
dplyr::summarise(counts = n())
# Print waterfall table
knitr::kable(waterfall, align = c("l", "r"),caption = "Drop waterfall")
# sample population
SampledPop <- dplyr::filter(ames,Zoning == 'RL')
# define variables of interest from the data
colsofinterest <- c('LotArea'
, 'LotConfig'
, 'Neighborhood'
, 'HouseStyle'
, 'OverallCond'
, 'YearRemodel'
, 'TotalBsmtSF'
, 'GrLivArea'
, 'BsmtFullBath'
, 'BsmtHalfBath'
, 'FullBath'
, 'HalfBath'
, 'BedroomAbvGr'
, 'KitchenQual'
, 'TotRmsAbvGrd'
, 'GarageArea'
, 'MoSold'
, 'YrSold'
, 'SaleCondition'
, 'SalePrice')
library(dplyr)
SampleFrame <- SampledPop %>% select_(.dots = colsofinterest)
library(mosaic)
# populate table with statistics
sanitycheck <- do.call(rbind,dfapply(SampleFrame,favstats, select = is.numeric))
# format numbers in the table for mean and sd
sanitycheck$mean <- as.numeric(format(sanitycheck$mean , digits = 1, nsmall = 2))
sanitycheck$sd <- as.numeric(format(sanitycheck$sd , digits = 1, nsmall = 2))
# subset character columns from sanitycheck
sanitycheckcharacter <- dplyr::select(SampleFrame, colnames(SampleFrame[1,sapply(SampleFrame,class) == 'character']))
library(purrr)
UniqueVals <- sanitycheckcharacter %>%
map(unique)
#s <- data.frame(names(tst),sapply(tst,function(x){paste(x,collapse = ",")}),row.names = NULL)
Counts <- data.frame(sapply(UniqueVals,length),do.call(rbind,dfapply(sanitycheckcharacter,length,select = is.character)),do.call(rbind,dfapply(sanitycheckcharacter,n_missing,select = is.character)),row.names = names(UniqueVals))
colnames(Counts) <- c( "# Unique", "n","missing")
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SampleFrame %>% dplyr::add_count(Neighborhood)
ggplot(data = SampleFrame, mapping = aes(x = SaleConditionGrp, y = SalePrice)) + geom_boxplot()
SampleFrame %>% count(Neighborhood)
SampleFrame %>% dplyr::count(Neihborhood)
SampleFrame %>% dplyr::count(Neighborhood)
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > 50)
SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > 50)
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > 100)
test <- dplyr::select(SampleFrame,Neighborhood %in% SelectHood$Neighborhood)
test <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
unique(test$Neighborhood)
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > 100)
df <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
ggplot(data = df, mapping = aes(x = SaleConditionGrp, y = SalePrice)) + geom_boxplot()
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > 100)
df <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
ggplot(data = df, mapping = aes(x = SaleConditionGrp, y = SalePrice)) + geom_boxplot() + facet_wrap(~Neighborhood)
Exceed <- 100
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > Exceed)
df <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
ggplot(data = df, mapping = aes(x = SaleConditionGrp, y = SalePrice)) + geom_boxplot() + geom_point() + facet_wrap(~Neighborhood)
Exceed <- 100
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > Exceed)
df <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
ggplot(data = df, mapping = aes(x = SaleConditionGrp, y = SalePrice, color = SaleConditionGrp)) + geom_boxplot() + geom_point() + facet_wrap(~Neighborhood)
Exceed <- 100
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > Exceed)
df <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
ggplot(data = df, mapping = aes(x = SaleConditionGrp, y = SalePrice, color = SaleConditionGrp)) + geom_boxplot() + geom_point() + facet_wrap(~Neighborhood) + theme_bw()
Exceed <- 100
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > Exceed)
df <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
ggplot(data = df, mapping = aes(x = SaleConditionGrp, y = SalePrice, color = SaleConditionGrp)) + geom_boxplot() + geom_point() + geom_jitter(0.3) + facet_wrap(~Neighborhood) + theme_bw()
Exceed <- 100
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > Exceed)
df <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
ggplot(data = df, mapping = aes(x = SaleConditionGrp, y = SalePrice, color = SaleConditionGrp)) + geom_boxplot() + geom_point() + geom_jitter(position = position_jitter(width = 0.1, height = 0.1)) + facet_wrap(~Neighborhood) + theme_bw()
Exceed <- 100
SampleFrame <- SampleFrame %>%
mutate(SaleConditionGrp = ifelse(SaleCondition == 'Partial',"Partial","Other Conditions"))
SelectHood <- SampleFrame %>% dplyr::count(Neighborhood) %>% filter(n > Exceed)
df <- SampleFrame %>% dplyr::filter(Neighborhood %in% SelectHood$Neighborhood)
ggplot(data = df, mapping = aes(x = SaleConditionGrp, y = SalePrice, color = SaleConditionGrp)) + geom_boxplot() + geom_point() + geom_jitter(position = position_jitter(width = 0.1, height = 0.1)) + facet_wrap(~Neighborhood) + theme_bw()
