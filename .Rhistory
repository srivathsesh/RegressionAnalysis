qicharts::qic(data = MLR_Model,y = .resid, x = TotBsmtSF,chart = "i")
qicharts::qic(data = MLR_Model,y = .resid, x = TotalBsmtSF,chart = "i")
qicharts::qic(data = MLR_Model,y = .resid, x = GrLivArea,chart = "i")
plotdf <- cbind(MLR_Model,trainFiltered[,c("FullBath","Neighborhood","TotRmsAbvGrd", "GarageArea")])
p <- ggplot(plotdf)
p1 <- p + mapping(aes(x = Neighborhood, y = .resid))
p1 <- p + geom_box(mapping = aes(x = Neighborhood, y = .resid))
p1 <- p + geom_boxplot(mapping = aes(x = Neighborhood, y = .resid))
p1
p1 <- p + geom_boxplot(mapping = aes(x = Neighborhood, y = .resid),orientation = 'h')
p1 + coord_flip()
p1 <- p + geom_boxplot(mapping = aes(x = Neighborhood, y = .resid),color = Neighborhood)
p1 <- p + geom_boxplot(mapping = aes(x = Neighborhood, y = .resid, color = Neighborhood))
p1 + coord_flip()
p1 + coord_flip() + theme_classic()
p1 + coord_flip() + theme(legend.position = "none")
p1 + coord_flip() + theme(legend.position = "none") + theme_bw()
p1 + coord_flip() + theme_bw() +theme(legend.position = "none")
plotdf %>% dplyr::group_by(Neighborhood) %>% dplyr::summarise(TotalSQFT = sum(TotalBsmtSF),TotalPrice = sum(SalePrice) )
plotdf %>% dplyr::group_by(Neighborhood) %>% dplyr::summarise(TotalSQFT = sum(TotalBsmtSF),TotalPrice = sum(SalePrice) ) %>% dplyr::mutate(PricePerSF = TotalPrice/TotalSQFT)
summary(MLR)
broom::tidy(summary(MLR))
broom::glance(MLR)
summary(SLR_BsmtArea)
broom::glance(SLR_BsmtArea)
FtestsSLR_GrLivArea <- broom::glance(SLR_LivingArea_NoIntercept)
# No intercept model
SLR_LivingArea_NoIntercept <- lm(data = trainFiltered, SalePrice ~ GrLivArea +0)
# print model
summary(SLR_LivingArea_NoIntercept)
# Model diagnostics
ResdfNI <- broom::augment(SLR_LivingArea_NoIntercept)
FtestsSLR_GrLivArea <- broom::glance(SLR_LivingArea_NoIntercept)
# Plot of residuals
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
hist(ResdfNI$.resid, main = "Histogram of residuals", xlab = "Residuals")
qqnorm(ResdfNI$.resid,title = "Normal Q-Q plot of residuals (Sale Price)")
qqline(ResdfNI$.resid)
plot(ResdfNI$GrLivArea,ResdfNI$.resid,main = "Residuals vs Living Area", xlab = "Above grade living area", ylab = "Residuals")
SLR_BsmtArea <- lm(data = trainFiltered,SalePrice ~ TotalBsmtSF)
print(summary(SLR_BsmtArea), caption = 'ANOVA Simple Linear Regression Total basment area')
# Model diagnostics
# Tidy store of model results
ResdfBsmt <- broom::augment(SLR_BsmtArea)
FTestsSLR_BsmtArea <- broom::glance(SLR_BsmtArea)
# Plot of residuals
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
hist(ResdfBsmt$.resid, main = "Histogram of residuals", xlab = "Residuals")
qqnorm(ResdfBsmt$.resid,title = "Normal Q-Q plot of residuals (Sale Price)")
qqline(ResdfBsmt$.resid)
plot(ResdfBsmt$TotalBsmtSF,ResdfBsmt$.resid,main = "Residuals vs Total basement Area", xlab = "Total Basement area", ylab = "Residuals")
MLR <- lm(data = trainFiltered,SalePrice ~ TotalBsmtSF + GrLivArea)
print(summary(MLR), caption = 'ANOVA Multiple Linear Regression Total basment area')
# Model diagnostics
# Tidy store of model results
MLR_Model <- broom::augment(MLR)
FtestsMLR <- broom::glance(MLR)
# Plot of residuals
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
hist(MLR_Model$.resid, main = "Histogram of residuals", xlab = "Residuals")
qqnorm(MLR_Model$.resid,title = "Normal Q-Q plot of residuals (Sale Price)")
qqline(MLR_Model$.resid)
plot(MLR_Model$TotalBsmtSF,ResdfBsmt$.resid,main = "Residuals vs Total basement Area", xlab = "Total Basement area", ylab = "Residuals")
plot(MLR_Model$GrLivArea,MLR_Model$.resid,main = "Residuals vs Living Area", xlab = "Living Area above grade", ylab = "Residuals")
# No intercept model
SLR_LivingArea_NoIntercept <- lm(data = trainFiltered, SalePrice ~ GrLivArea +0)
# print model
summary(SLR_LivingArea_NoIntercept)
# Model diagnostics
ResdfNI <- broom::augment(SLR_LivingArea_NoIntercept)
FtestsSLR_GrLivArea <- broom::glance(SLR_LivingArea_NoIntercept)
# Plot of residuals
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
hist(ResdfNI$.resid, main = "Histogram of residuals", xlab = "Residuals")
qqnorm(ResdfNI$.resid,title = "Normal Q-Q plot of residuals (Sale Price)")
qqline(ResdfNI$.resid)
plot(ResdfNI$GrLivArea,ResdfNI$.resid,main = "Residuals vs Living Area", xlab = "Above grade living area", ylab = "Residuals")
SLR_BsmtArea <- lm(data = trainFiltered,SalePrice ~ TotalBsmtSF)
print(summary(SLR_BsmtArea), caption = 'ANOVA Simple Linear Regression Total basment area')
# Model diagnostics
# Tidy store of model results
ResdfBsmt <- broom::augment(SLR_BsmtArea)
FTestsSLR_BsmtArea <- broom::glance(SLR_BsmtArea)
# Plot of residuals
layout(matrix(c(1,2,3,3), 2, 2, byrow = TRUE))
hist(ResdfBsmt$.resid, main = "Histogram of residuals", xlab = "Residuals")
qqnorm(ResdfBsmt$.resid,title = "Normal Q-Q plot of residuals (Sale Price)")
qqline(ResdfBsmt$.resid)
plot(ResdfBsmt$TotalBsmtSF,ResdfBsmt$.resid,main = "Residuals vs Total basement Area", xlab = "Total Basement area", ylab = "Residuals")
MLR <- lm(data = trainFiltered,SalePrice ~ TotalBsmtSF + GrLivArea)
print(summary(MLR), caption = 'ANOVA Multiple Linear Regression Total basment area')
# Model diagnostics
# Tidy store of model results
MLR_Model <- broom::augment(MLR)
FtestsMLR <- broom::glance(MLR)
# Plot of residuals
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
hist(MLR_Model$.resid, main = "Histogram of residuals", xlab = "Residuals")
qqnorm(MLR_Model$.resid,title = "Normal Q-Q plot of residuals (Sale Price)")
qqline(MLR_Model$.resid)
plot(MLR_Model$TotalBsmtSF,ResdfBsmt$.resid,main = "Residuals vs Total basement Area", xlab = "Total Basement area", ylab = "Residuals")
plot(MLR_Model$GrLivArea,MLR_Model$.resid,main = "Residuals vs Living Area", xlab = "Living Area above grade", ylab = "Residuals")
Models <- c("SalePrice = 126.9 * GrLivArea","SalePrice = 47859.31 + 129.96 * TotalBsmtSF","-502244.02 + 84.11 * TotalBsmtSF + 97.608 * GrLivArea")
MSres <- c(round(FtestsSLR_GrLivArea$sigma,2),round(FTestsSLR_BsmtArea$sigma,2),round(FtestsMLR$sigma,2))
F_Stat <- c(round(FtestsSLR_GrLivArea$statistic,2),round(FtestsSLR_GrLivArea$statistic,2), round(FtestsMLR$statistic,2))
P_Value <- c(round(FtestsSLR_GrLivArea$p.value,2),round(FtestsSLR_GrLivArea$p.value,2), round(FtestsMLR$p.value,2))
Adj_R_Squared <- c(round(FtestsSLR_GrLivArea$adj.r.squared,2),round(FtestsSLR_GrLivArea$adj.r.squared,2), round(FtestsMLR$adj.r.squared,2))
Normality <- c("Satisfied thick pen test; heavy tails","Satisfied thick pen test; heavy tails","Satisfied thick pen test; heavy tails")
ResidualPattern <- c("Funnel shaped", "Funnel shaped", "Funnel shaped", "Funnel shaped")
Comparisondf <- cbind(Models,MSres,F_Stat,P_Value,Adj_R_Squared,Normality,ResidualPattern)
Comparisondf <- cbind(Models,MSres,F_Stat,P_Value,Adj_R_Squared,Normality,ResidualPattern)
ResidualPattern <- c("Funnel shaped", "Funnel shaped", "Funnel shaped")
Comparisondf <- cbind(Models,MSres,F_Stat,P_Value,Adj_R_Squared,Normality,ResidualPattern)
colnames(Comparisondf) <- c("Model","MSres","F Stat","P Value", "Adj R^2", "Residuals Normality", "Residuals Pattern")
Models <- c("SalePrice = 126.9 * GrLivArea","SalePrice = 47859.31 + 129.96 * TotalBsmtSF","-502244.02 + 84.11 * TotalBsmtSF + 97.608 * GrLivArea")
MSres <- c(round(FtestsSLR_GrLivArea$sigma,2),round(FTestsSLR_BsmtArea$sigma,2),round(FtestsMLR$sigma,2))
F_Stat <- c(round(FtestsSLR_GrLivArea$statistic,2),round(FtestsSLR_GrLivArea$statistic,2), round(FtestsMLR$statistic,2))
P_Value <- c(round(FtestsSLR_GrLivArea$p.value,2),round(FtestsSLR_GrLivArea$p.value,2), round(FtestsMLR$p.value,2))
Adj_R_Squared <- c(round(FtestsSLR_GrLivArea$adj.r.squared,2),round(FtestsSLR_GrLivArea$adj.r.squared,2), round(FtestsMLR$adj.r.squared,2))
Normality <- c("Satisfied thick pen test; heavy tails","Satisfied thick pen test; heavy tails","Satisfied thick pen test; heavy tails")
ResidualPattern <- c("Funnel shaped", "Funnel shaped", "Funnel shaped")
Comparisondf <- cbind(Models,MSres,F_Stat,P_Value,Adj_R_Squared,Normality,ResidualPattern)
colnames(Comparisondf) <- c("Model","MSres","F Stat","P Value", "Adj R^2", "Residuals Normality", "Residuals Pattern")
knitr::kable(Comparisondf)
install.packages("pander")
pander::pander(test)
pander::pander(Comparisondf)
Models <- c("SalePrice = 126.9 * GrLivArea","SalePrice = 47859.31 + 129.96 * TotalBsmtSF","-502244.02 + 84.11 * TotalBsmtSF + 97.608 * GrLivArea")
MSres <- c(round(FtestsSLR_GrLivArea$sigma,2),round(FTestsSLR_BsmtArea$sigma,2),round(FtestsMLR$sigma,2))
F_Stat <- c(round(FtestsSLR_GrLivArea$statistic,2),round(FtestsSLR_GrLivArea$statistic,2), round(FtestsMLR$statistic,2))
P_Value <- c(round(FtestsSLR_GrLivArea$p.value,2),round(FtestsSLR_GrLivArea$p.value,2), round(FtestsMLR$p.value,2))
Adj_R_Squared <- c(round(FtestsSLR_GrLivArea$adj.r.squared,2),round(FtestsSLR_GrLivArea$adj.r.squared,2), round(FtestsMLR$adj.r.squared,2))
Normality <- c("Satisfied thick pen test; heavy tails","Satisfied thick pen test; heavy tails","Satisfied thick pen test; heavy tails")
ResidualPattern <- c("Funnel shaped", "Funnel shaped", "Funnel shaped")
Comparisondf <- cbind(Models,MSres,F_Stat,P_Value,Adj_R_Squared,Normality,ResidualPattern)
colnames(Comparisondf) <- c("Model","MSres","F Stat","P Value", "Adj R^2", "Residuals Normality", "Residuals Pattern")
# knitr::kable(Comparisondf)
pander::pander(Comparisondf)
View(MLR_Model)
# prepare dataframe with residuals
MLR_Model$Neighborhood <- trainFiltered$Neighborhood
MLR_Model$TotRmsAbvGrd <- trainFiltered$TotRmsAbvGrd
MLR_Model$KitchenQual <- trainFiltered$KitchenQual
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age = mean(age, na.rm = TRUE),
tvhours = mean(tvhours, na.rm = TRUE),
n = n()
)
ggplot(relig_summary, aes(tvhours, relig)) + geom_point()
library(forcats)
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age = mean(age, na.rm = TRUE),
tvhours = mean(tvhours, na.rm = TRUE),
n = n()
)
ggplot(relig_summary, aes(tvhours, relig)) + geom_point()
relig_summary <- gss_cat %>%
+   group_by(relig) %>%
+   summarise(
+     age = mean(age, na.rm = TRUE),
+     tvhours = mean(tvhours, na.rm = TRUE),
+     n = n()
+   )
relig_summary <- gss_cat %>%
+   group_by(relig) %>%
+   summarise(
+     age = mean(age, na.rm = TRUE),
+     tvhours = mean(tvhours, na.rm = TRUE),
+     n = n()
+   )
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age = mean(age, na.rm = TRUE),
tvhours = mean(tvhours, na.rm = TRUE),
n = n()
)
library(tidyverse)
relig_summary <- gss_cat %>%
group_by(relig) %>%
summarise(
age = mean(age, na.rm = TRUE),
tvhours = mean(tvhours, na.rm = TRUE),
n = n()
)
ggplot(relig_summary, aes(tvhours, relig)) + geom_point()
ggplot(relig_summary,mapping = aes(x = tvhours, y = fct_reorder(relig,tvhours))) + geom_point()
p <- ggplot(MLR_Model, mapping = aes(x = Neighborhood, y= .resid, color = Neighborhood))
residboxplot <- p + geom_boxplot() + coord_flip() + theme_bw()
residboxplot
p <- ggplot(MLR_Model, mapping = aes(x = Neighborhood, y= .resid, color = Neighborhood))
residboxplot <- p + geom_boxplot() + coord_flip() + theme_bw() + theme(legend.position = "none")
residboxplot
p <- ggplot(MLR_Model, mapping = aes(x = Neighborhood, y= .std.resid, color = Neighborhood))
residboxplot <- p + geom_boxplot() + coord_flip() + theme_bw() + theme(legend.position = "none")
residboxplot
residboxplot + vline(c(-1,0,1))
residboxplot + geom_hline(yintercept = c(-1,0,1), lty = 'dash',color = 'red')
residboxplot + geom_hline(yintercept = c(-1,0,1), linetype = 'dashed',color = 'red')
qicharts::qic(data=MLR_Model,y = .std.resid, x = Neighborhood, chart = "xbar")
p <- ggplot(MLR_Model, mapping = aes(x = fct_reorder(Neighborhood,.std.resid), y= .std.resid, color = Neighborhood))
residboxplot <- p + geom_boxplot() + coord_flip() + theme_bw() + theme(legend.position = "none")
residboxplot + geom_hline(yintercept = c(-1,0,1), linetype = 'dashed',color = 'red')
