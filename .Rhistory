subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 6)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 6)
subset$kmeans6 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab6 <- table(subset$Group, subset$kmeans6)
t(tab6)/colSums(tab6)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.2, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.2, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.2, label = rownames(centers)),size = 3) + theme_bw()
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.2, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.2, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.2),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.2, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 6)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 6)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 6)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 6)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
tab5
max(tab5[1:3,])
tab5
sum(tab5[1:3,])
tab5
names(subset)
Accuracy <- function(data,cluster) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map2_df(.x = subset, .y = 1:6,.f = Accuracy)
rep(subset,6)
Accuracy <- function(data = subset,cluster) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 1:6,.f = Accuracy)
AccuracyResults <-  purrr::map_df(.x = 2:6,.f = Accuracy)
subset[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]
Accuracy <- function(data = subset,cluster) {
# lets get the hierarchical clustering accuracy
browser()
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 2:6,.f = Accuracy)
data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]
Accuracy <- function(data = subset,cluster) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 2:6,.f = Accuracy(cluster = .x))
Accuracy <- function(data = subset,cluster) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 2:6,.f = Accuracy(cluster = x))
Accuracy <- function(cluster,data = subset) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 2:6,.f = Accuracy)
View(AccuracyResults)
Accuracy <- function(cluster,data = subset) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 1:6,.f = Accuracy)
Accuracy <- function(cluster,data = subset) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 1:6,.f = Accuracy)
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_line(aes(y = kmean.Accuracy, color = 'blue') )
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red')) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') )
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red')) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw()
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red')) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
knitr::opts_chunk$set(echo = TRUE,tidy.opts=list(width.cutoff=70),tidy=TRUE)
library(magrittr)
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red',legend("Hierarchial"))) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red',labels = c("Hierarchial"))) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red',guide_legend(title = "Hierarchial"))) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
Accuracy <- function(cluster,data = subset) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 1:6,.f = Accuracy)
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red',guide_legend(title = "Hierarchial"))) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red',guide_legend(title = "Hierarchial"))) + geom_line(aes(y = kmean.Accuracy, color = 'blue',guide_legend(title = "Hierarchial")) ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red',guide_legend(title = "Hierarchial"))) + geom_line(aes(y = kmean.Accuracy, color = 'blue',guide_legend(title = "Hierarchial")) ) + geom_point(aes(y = kmean.Accuracy, color = 'blue',guide_legend(title = "Hierarchial")) ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red',guide_legend(title = "Hierarchial"))) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
knitr::opts_chunk$set(echo = TRUE,tidy.opts=list(width.cutoff=70),tidy=TRUE)
library(magrittr)
my.data <- read.csv('European_Employment.csv', header = T)
levels(my.data$Group)
pairs(my.data[,-2], col = my.data$Group)
library(ggplot2)
ggplot(data = my.data, mapping = aes(x = SER, y = FIN, color = Group, label = Country)) + geom_point() + geom_text(show.legend = F) + theme_bw() + xlab("Service") + ylab("Finance")
ggplot(data = my.data, mapping = aes(x = MAN, y = FIN, color = Group, label = Country)) + geom_point() + geom_text(show.legend = F) + theme_bw() + xlab("Manufacturing") + ylab("Finance")
pca <- princomp(my.data[,c(-1,-2)], cor = F)
summary(pca)
my.data$pc.1 <- pca$score[,1]
my.data$pc.2 <- pca$score[,2]
ggplot(data = my.data,mapping = aes(x = pc.1, y = pc.2, color = Group, label = Country)) + geom_point() + geom_text(size = 3,show.legend = F) + theme_light()
my.data <- dplyr::as_tibble(my.data)
subset <- my.data %>%
dplyr::filter(Group != "Other")
fin.ser <- hclust(dist(subset[,c('FIN','SER')]),method = "complete")
plot(fin.ser,labels = subset$Country)
class <- cutree(fin.ser,k = 3)
class2 <- cutree(fin.ser,h = 12) # class 1 & 2 are the same
subset$clust3 <- class
tab <- table(subset$Group,subset$clust3)
tab <- tab[1:3,]
# t(tab) * (1/apply(tab,FUN = sum, MARGIN = 2))
# tab
round(t(tab) / colSums(tab),2)
class6 <- cutree(fin.ser,k=6)
subset$clust6 <- class6
tab2 <- table(subset$Group,subset$clust6)
tab2 <- tab2[1:3,]
# t(tab) * (1/apply(tab,FUN = sum, MARGIN = 2))
# tab
round(t(tab2) / colSums(tab2),2)
pca.out <- princomp(subset[,3:11],cor = F)
summary(pca.out)
subset$pc.out.1 <- pca.out$scores[,1]
subset$pc.out.2 <- pca.out$scores[,2]
pca.hclust <- hclust(dist(subset[,c('pc.out.1','pc.out.2')]), method = 'complete')
plot(pca.hclust, labels = subset$Country)
tab3 <- table(subset$Group,cutree(pca.hclust,k = 3))
round(t(tab3)/colSums(tab3),2)
tab4 <- table(subset$Group,cutree(pca.hclust,k = 6))
round(t(tab4)/colSums(tab4),2)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('FIN','SER')], centers = 6)
subset$kmeans6 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = FIN, x = SER, color = Group)) + geom_text(data = subset, mapping = aes(y = FIN, x = SER, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = FIN, x = SER),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = FIN, x = SER, label = rownames(centers)),size = 3) + theme_bw()
tab6 <- table(subset$Group, subset$kmeans6)
t(tab6)/colSums(tab6)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 3)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
finser <- kmeans(x = subset[,c('pc.out.1','pc.out.2')], centers = 6)
subset$kmeans3 <- finser$cluster
centers <- as.data.frame(finser$centers)
ggplot() + geom_point(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group)) + geom_text(data = subset, mapping = aes(y = pc.out.2, x = pc.out.1, color = Group, label = Country ),show.legend = F,size = 3,nudge_x = 0.3,nudge_y = 0.01) +
geom_point(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1),shape = 23, fill = 'red', size = 5) + geom_text(data = centers , mapping = aes(y = pc.out.2, x = pc.out.1, label = rownames(centers)),size = 3) + theme_bw()
tab5 <- table(subset$Group, subset$kmeans3)
t(tab5)/colSums(tab5)
sum(tab5[1:3,])
Accuracy <- function(cluster,data = subset) {
# lets get the hierarchical clustering accuracy
hclust <- hclust(dist(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )]), method = "complete")
data$hiercluster <- cutree(hclust,k = cluster)
tab <- table(data$Group,data$hiercluster)
hier.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab[1:3,])))
# k means
kclust <- kmeans(data[,c("AGR","MIN","MAN","PS","CON","SER","FIN","SPS","TC" )],centers = cluster)
data$kclust <- kclust$cluster
tab2 <- table(data$Group, data$kclust)
kmean.Accuracy <- ifelse(cluster == 1,max(tab[1:3,])/sum(tab[1:3,]),sum(apply(tab2[1:3,],MARGIN = 2,FUN = max))/sum(colSums(tab2[1:3,])))
return(data.frame(cluster = cluster,hier.Accuracy = hier.Accuracy, kmean.Accuracy = kmean.Accuracy))
}
AccuracyResults <-  purrr::map_df(.x = 1:6,.f = Accuracy)
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red') ) + geom_point(aes(y = hier.Accuracy, color = 'red')) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red')) + geom_line(aes(y = kmean.Accuracy, color = 'blue') ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F  ) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy") + scale_color_manual(values = c(kmean = 'blue',hierarchy = 'red))
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")  + scale_color_manual(values = c(kmean = 'blue',hierarchy = 'red))
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")  + scale_color_manual(values = c(kmean = 'blue',hierarchy = 'red))
)
)
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy") + scale_color_manual(values = c(kmean = 'blue',hierarchy = 'red))
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy") + scale_color_manual(values = c(kmean = 'blue',hierarchy = 'red))
ggplot(data = AccuracyResults, mapping = aes(x = cluster)) + geom_line(aes(y = hier.Accuracy, color = 'red'), show.legend = F ) + geom_point(aes(y = hier.Accuracy, color = 'red'),show.legend = F ) + geom_line(aes(y = kmean.Accuracy, color = 'blue'),show.legend = F) + geom_point(aes(y = kmean.Accuracy, color = 'blue') ,show.legend = F ) + theme_bw() + xlab("# Clusters") + ylab("Accuracy")
readxl::read_xls('.\linear_regression_5e_data_sets\Chapter 8\Examples\data-ex-8-1 (Tool Life).xls')
readxl::read_xls('./linear_regression_5e_data_sets/Chapter 8/Examples/data-ex-8-1 (Tool Life).xls')
ToolLife <- readxl::read_xls('./linear_regression_5e_data_sets/Chapter 8/Examples/data-ex-8-1 (Tool Life).xls')
View(ToolLife)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(dplyr)
library(ggplot2)
View(ToolLife)
ggplot(data = ToolLife, mapping = aes(x = `xi1 (rpm)`, y = `yi (hours)`, color = `Tool Type`)) + geom_point()
ggplot(data = ToolLife, mapping = aes(x = `xi1 (rpm)`, y = `yi (hours)`, color = `Tool Type`)) + geom_point() + theme_bw()
ToolLife %>% mutate(Tool = ifelse(`Tool Type` = "A", 0 ,1))
ToolLife %>% mutate(Tool = ifelse(`Tool Type` == "A", 0 ,1))
ToolLife %>% mutate(Tool = ifelse(`Tool Type` == "A", 0 ,1)) <- ToolLife
ToolLife %>% mutate(Tool = ifelse(`Tool Type` == "A", 0 ,1)) -> ToolLife
ToolA <- ToolLife %>% filter(Tool == 0)
lm.A <- lm(data = ToolA, `yi (hours)` ~ `xi1 (rpm)` )
summary(lm.A)
ToolB <- ToolLife %>% filter(Tool == 1)
lm.B <- lm(data = ToolB, `yi (hours)` ~ `xi1 (rpm)` )
summary(lm.B)
ToolA <- ToolLife %>% filter(Tool == 0)
lm.A <- lm(data = ToolA, `yi (hours)` ~ `xi1 (rpm)` )
summary(lm.A)
ToolB <- ToolLife %>% filter(Tool == 1)
lm.B <- lm(data = ToolB, `yi (hours)` ~ `xi1 (rpm)` )
summary(lm.B)
36.986 - .027
ToolB <- ToolLife %>% filter(Tool == 1)
lm.B <- lm(data = ToolB, `yi (hours)` ~ `xi1 (rpm)` )
summary(lm.B)
36.986 - .027
lm.Ind <- lm(data = ToolLife , `yi (hours)` ~ `xi1 (rpm)` + Tool )
summary(lm.Ind)
lm.A$fitted.values[1,]
lm.A$fitted.values
lm.A$fitted.values
lm.Ind$fitted.values
lm.Ind$fitted.values[,10]
lm.Ind$fitted.values[1:10]
lm.A$fitted.values
lm.Ind$fitted.values[1:10]
plot(lm.A)
lm.A.res <- c(lm.A$residuals,rep(NA,5))
lm.A.res <- c(lm.A$residuals,rep(NA,10))
lm.B.res <- c(rep(NA,10),lm.B$residuals)
lm.B.res
ToolLife$lm.A.res <- lm.A.res
lm.A.res <- c(lm.A$residuals,rep(NA,10))
lm.B.res <- c(rep(NA,10),lm.B$residuals)
ToolLife$lm.A.res <- lm.A.res
ToolLife$lm.B.res <- lm.B.res
stocks <- data_frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
gather(stocks, stock, price, -time)
tidyr::gather(stocks, stock, price, -time)
View(stocks)
Tools_molten <- tidyr::gather(data = ToolLife, model, res, - `yi (hours` )
Tools_molten <- tidyr::gather(data = ToolLife, model, res, - `yi (hours)` )
View(Tools_molten)
Tools_molten <- ToolLife %>%
tidyr::gather(i,hours, rpm, ToolType, Tool, model,lm.A.res:lm.B.res)
Tools_molten <- ToolLife %>%
tidyr::gather(i,` yi (hours)`, `xi1 (rpm)`, ToolType, Tool, model,lm.A.res:lm.B.res)
Tools_molten <- ToolLife %>%
tidyr::gather(i,` yi (hours)`, `xi1 (rpm)`, `Tool Type`, Tool, model,lm.A.res:lm.B.res)
Tools_molten <- ToolLife %>%
tidyr::gather(i,` yi (hours)`, `xi1 (rpm)`, `Tool Type`, Tool, lm.A.res:lm.B.res)
Tools_molten <- ToolLife %>%
tidyr::gather(key = "Model", Value = "Res",id.vars = c("i", "yi (hours)","xi1 (rpm)", "Tool Type", "Tool") )
Tools_molten <- ToolLife %>%
tidyr::gather(variable.name = "Model", value.name = "Res",id.vars = c("i", "yi (hours)","xi1 (rpm)", "Tool Type", "Tool") )
messy <- data.frame(id = 1:4,
trt = sample(rep(c('control', 'treatment'), each = 2)),
work.T1 = runif(4),
home.T1 = runif(4),
work.T2 = runif(4),
home.T2 = runif(4))
View(messy)
gathered.messy <- gather(messy, key, value, -id, -trt)
gathered.messy <- tidyr::gather(messy, key, value, -id, -trt)
gathered.messy
Tools_molten <- ToolLife %>%
tidyr::gather(variable.name = "Model", value.name = "Res",id.vars = c("i", "yi (hours)","xi1 (rpm)", "Tool Type", "Tool") )
Tools_molten <- ToolLife %>%
tidyr::gather(model,res,-i, -`yi (hours)`, -`xi1 (rpm)`, -`Tool Type`, -Tool)
View(Tools_molten)
lm.A.res <- c(lm.A$residuals,rep(NA,10))
lm.B.res <- c(rep(NA,10),lm.B$residuals)
ToolLife$lm.Ind.res <- lm.Ind$residuals
ToolLife$lm.A.res <- lm.A.res
ToolLife$lm.B.res <- lm.B.res
Tools_molten <- ToolLife %>%
tidyr::gather(model,res,-i, -`yi (hours)`, -`xi1 (rpm)`, -`Tool Type`, -Tool)
View(Tools_molten)
ggplot(data = Tools_molten, mapping = aes(x = `xi1 (rpm)`, y = res, color = model)) + geom_point()
ggplot(data = Tools_molten, mapping = aes(x = `xi1 (rpm)`, y = res, color = model)) + geom_line()
ggplot(data = Tools_molten, mapping = aes(x = `xi1 (rpm)`, y = res, color = model)) + geom_point()
ggplot(data = Tools_molten, mapping = aes(x = `xi1 (rpm)`, y = res, color = model)) + geom_boxplot()
ggplot(data = Tools_molten, mapping = aes( x = res, color = model)) + geom_density()
ggplot(data = Tools_molten, mapping = aes( y = res, x = model)) + geom_point()
p <- ggplot(data = Tools_molten, mapping = aes(x = `xi1 (rpm)`, y = res)) + geom_point()
p + facet_grid(. ~ model)
p <- ggplot(data = Tools_molten, mapping = aes(x = `xi1 (rpm)`, y = res, color = `Tool Type`)) + geom_point()
p + facet_grid(. ~ model)
ggplot(data = ToolLife, mapping = aes(x = `xi1 (rpm)`, y = `yi (hours)`, color = `Tool Type`)) + geom_point() + theme_bw() + geom_smooth(method = "lm", se = F)
lm.B.data <- broom::augment(lm.B)
View(lm.B.data)
lm.Ind2 <- lm(data = ToolLife , `yi (hours)` ~ `xi1 (rpm)` + Tool + `xi1 (rpm)`*Tool )
lm.Ind2 <- lm(data = ToolLife , `yi (hours)` ~ `xi1 (rpm)` + Tool + `xi1 (rpm)`*Tool )
lm.A.res <- c(lm.A$residuals,rep(NA,10))
lm.B.res <- c(rep(NA,10),lm.B$residuals)
ToolLife$lm.Ind.res <- lm.Ind$residuals
ToolLife$lm.Ind2.res <- lm.Ind2$residuals
ToolLife$lm.A.res <- lm.A.res
ToolLife$lm.B.res <- lm.B.res
Tools_molten <- ToolLife %>%
tidyr::gather(model,res,-i, -`yi (hours)`, -`xi1 (rpm)`, -`Tool Type`, -Tool)
p <- ggplot(data = Tools_molten, mapping = aes(x = `xi1 (rpm)`, y = res, color = `Tool Type`)) + geom_point()
p + facet_grid(. ~ model)
summary(lm.Ind2)
