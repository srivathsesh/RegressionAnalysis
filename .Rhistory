matrix(c(191, 195, 181, 183, 176, 208, 189, 197, 188, 192, 179, 183, 174, 190, 188, 163, 195, 186, 181, 175, 192, 174,
176, 197, 190, 155, 149, 148, 153, 144, 157, 150, 159, 152, 150, 158, 147, 150, 159, 151, 137, 155, 153,
145, 140, 154, 143, 139, 167, 163, 179, 201, 185, 188, 171, 192, 190, 189, 197, 187, 186, 174, 185, 195,
187, 161, 183, 173, 182, 165, 185, 178, 176, 200, 187, 145, 152, 149, 149, 142, 152, 149, 152, 159, 151,
148, 147, 152, 157, 158, 130, 158, 148, 146, 137, 152, 147, 143, 158, 150)
, nrow = 25, ncol = 4
,  dimnames = list(character(0)
, c("head1", "breadth1", "head2", "breadth2")))
x <- headsize
headsize <- as.data.frame(headsize)
toLatex(HSAURtable(headsize), pcol = 2,
caption = "Head Size Data.",
label = "ch:PCA:headsize:tab", rownames = FALSE)
headsize <- x
###################################################
head_dat <- headsize[, c("head1", "head2")]
colMeans(head_dat)
cov(head_dat)
head_pca <- princomp(x = head_dat)
head_pca
summary(head_pca)
head_pca$sdev^2
sum(head_pca$sdev^2)
12.6^2
summary(head_pca,loadings = T)
loadings <- head_pca$loadings
loadings*head_dat
outer(head_dat,leadings, "*")
outer(head_dat,loadings, "*")
head_dat %*% loadings
head_pca$scores
head_dat %*% loadings[,1]
loadings[1,1]*191 + loadings[2,1]*179
loadings
var(head_pca$scores)
var(head_dat)
cov(head_dat)
var(head_dat[,"head1"])
sd(head_pca$scores)
sd(head_pca$scores)*.693
.693^2
mean(head_dat)
mean(head_dat[,1])
var(head_pca$scores)
sd(head_pca$scores)
var(head_pca$scores)^0.5
plot(-10,10)
plot(-10,10)
plot(-10,10)
knitr::opts_chunk$set(echo = F,tidy.opts=list(width.cutoff=70),tidy=TRUE)
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
View(stocks)
stocks$Date <- as.POSIXct.date(stocks$Date)
stocks$Date <- as.POSIXct.date(as.character(stocks$Date))
stocks$Date <- as.POSIXct(as.character(stocks$Date))
stocks$Date <- as.POSIXct.Date(as.character(stocks$Date))
View(stocks)
stocks$Date <- as.character(stocks$Date)
stocks$Date <- as.POSIXct.date(stocks$Date)
stocks$Date <- as.POSIXct(stocks$Date)
as.POSIXct.default(stocks$Date)
View(stocks)
as.POSIXct.default(stocks$Date,'%d -%M-%YY')
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
View(stocks)
as.Date(stocks$Date)
as.POSIXct.default(stocks$Date,'%d -%b-%y')
as.POSIXct.Date(stocks$Date,'%d -%b-%y')
as.POSIXct(stocks$Date,'%d -%b-%y')
as.POSIXct.Date(stocks$Date,'%d -%b-%y')
plot(as.POSIXct.Date(stocks$Date,'%d -%b-%y'))
# read data in
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
# format date & sort chronologically
stocks$Date <- as.POSIXct.Date(stocks$Date,'%d -%b-%y')
stocks <- stocks %>%
dplyr::arrange(Date)
library(magrittr)
# read data in
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
# format date & sort chronologically
stocks$Date <- as.POSIXct.Date(stocks$Date,'%d -%b-%y')
stocks <- stocks %>%
dplyr::arrange(Date)
# so
View(stocks)
test <- stocks$AA[-1]
test
plot(as.POSIXct.Date(stocks$Date,'%d -%b-%y'))
x <- c(1,2,3)
x [-1]
x [-2]
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
stocks$Date <- as.Date(stocks$Date,'%d -%b-%y')
sdf <- stocks[order(stocks$Date),]
head(sf)
head(sdf)
View(sdf)
stocks$Date <- as.POSIXct.Date(stocks$Date,'%d -%b-%y')
stocks <- stocks %>%
dplyr::arrange(Date)
View(sdf)
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
stocks$Date <- as.Date(stocks$Date,'%d -%b-%y')
stocks <- stocks %>%
dplyr::arrange(Date)
dim(stocks$AA)[1]
dim(stocks$AA)
dim(stocks)
stocks$AA[-dim(stocks)[1]]
lag(stocks$AA,1)
View(stocks$AA[-1])
test <- (stocks$AA[-1])
test <- stocks$AA[-501]
test
test <- (stocks$AA[-1])
test2 <- (stocks$AA[-501])
test3 <- lag(stocks$AA)
test3[501]
test[501]
test3[1]
test3 <- lag(stocks$AA,-1)
test3 <- lag(stocks$AA)
test3 <- lag(stocks$AA)
test3 <- lag(stocks$AA,1)
tes3[1]
test3[1]
test3 <- lag(stocks$AA)
test3 <- lag(stocks$AA,k = 1)
test3 <- lag(stocks$AA,k = 2)
test3 <- lag(stocks$AA,k = 100)
x <- c(1,2,3)
lag(x)
y <- lag(x)
y
names(y)
y[[2]]
y[2]
y[1][2]
y[1][1]
typeof(y)
y[,"tsp"]
stats::lag(x)
nrow(x)
nrow(stocks$AA)
length(stocks$AA)
dim(sdf)
logreturns <- function(x) {
log(x[-1]/x[-length(x)])
}
test <- logreturns(stocks$AA)
log(9.45/9.23)
purrr::map2_df(.x = stocks[,-1], .f = logreturns)
purrr::map_df(.x = stocks[,-1], .f = logreturns)
returns <- purrr::map_df(.x = stocks[,-1], .f = logreturns)
corrlelations <- cor(returns)
correlations <- cor(returns)
correlations
View(corrlelations)
p <- ggplot2::ggplot(data = correlations)
p <- ggplot2::ggplot(data = as.data.frame(correlations))
p + ggplot2::geom_bar(mapping = aes(x = row.names(correlations),y = VV))
p + ggplot2::geom_bar(mapping = aes(x = row.names(correlations), y = VV))
correlations <- as.data.frame(cor(returns))
p <- ggplot2::ggplot(data = correlations)
p + ggplot2::geom_bar(mapping = aes(x = row.names(correlations), y = VV))
ggplot2::ggplot(data = correlations, mapping = aes(x = row.names(corrlelations), y = VV))
library(ggplot2)
ggplot2::ggplot(data = correlations, mapping = aes(x = row.names(corrlelations), y = VV))
ggplot2::ggplot(data = correlations, mapping = aes(x = row.names(corrlelations), y = VV)) + geom_bar()
ggplot2::ggplot(data = correlations$VV, mapping = aes(x = row.names(corrlelations)) + geom_bar()
ggplot2::ggplot(data = correlations$VV, mapping = aes(x = row.names(corrlelations))) + geom_bar()
ggplot2::ggplot(data = as.data.frame(correlations$VV), mapping = aes(x = row.names(corrlelations))) + geom_bar()
ggplot(data = as.data.frame(correlations$VV)) + geom_bar()
ggplot(data = as.data.frame(correlations$VV)) + geom_bar(x = rownames(data))
corrlelations$VV
correlations$VV
ggplot(data = as.data.frame(correlations$VV)) + geom_bar(x = row.names(correlations))
ggplot(data = as.data.frame(correlations$VV)) + geom_bar(aes(x = row.names(correlations)))
ggplot(data = as.data.frame(correlations$VV)) + geom_bar(aes(x = row.names(correlations), y = VV ))
ggplot(data = as.data.frame(correlations$VV)) + geom_bar(aes(x = row.names(correlations), y = correlations$VV ))
ggplot(data = as.data.frame(correlations$VV), aes(x = row.names(correlations), y = correlations$VV ))
ggplot(data = as.data.frame(correlations$VV), aes(x = row.names(correlations), y = correlations$VV )) + geom_col()
ggplot(data = as.data.frame(correlations$VV), aes(x = fct_reorder(row.names(correlations),correlations$VV), y = correlations$VV )) + geom_col()
library(forcats)
ggplot(data = as.data.frame(correlations$VV), aes(x = fct_reorder(row.names(correlations),correlations$VV), y = correlations$VV )) + geom_col()
View(correlations)
ggplot(data = as.data.frame(correlations$VV[-length(correlations$VV)]), aes(x = fct_reorder(row.names(correlations),correlations$VV), y = correlations$VV )) + geom_col()
ggplot(data = as.data.frame(correlations$VV[1:20]), aes(x = fct_reorder(row.names(correlations),correlations$VV), y = correlations$VV )) + geom_col()
ggplot(data = as.data.frame(correlations$VV[1:20]), aes(x = fct_reorder(row.names(correlations[1:20]),correlations$VV[1:20]), y = correlations$VV[1:20])) + geom_col()
VV_cor <- as.data.frame(correlations$VV[-nrows(correlations)])
VV_cor <- as.data.frame(correlations$VV[-nrow(correlations)])
ggplot(data = VV_cor), aes(x = fct_reorder(row.names(VV_cor),VV_cor), y = VV_cor)) + geom_col()
ggplot(data = VV_cor, aes(x = fct_reorder(row.names(VV_cor),VV_cor), y = VV_cor)) + geom_col()
ggplot(data = VV_cor, aes(x = fct_reorder(row.names(VV_cor),VV_cor), y = VV_corr)) + geom_col()
VV_cor <- as.data.frame(correlations$VV[-nrow(correlations)])
ggplot(data = VV_cor, aes(x = fct_reorder(row.names(VV_cor),VV_cor), y = VV_corr)) + geom_col()
ggplot(data = VV_cor, aes(x = fct_reorder(row.names(VV_cor),VV_cor), y = VV_cor)) + geom_col()
ggplot(data = VV_cor, mapping = aes(x = row))
ggplot(data = VV_cor, mapping = aes(x = rownames(VV_cor), y = VV)) + geom_col()
View(VV_cor)
colnames(VV_cor) <- "VV"
colnames(VV_cor) <- "VV"
ggplot(data = VV_cor, mapping = aes(x = rownames(VV_cor), y = VV)) + geom_col()
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col()
ggplot(data = VV_cor, mapping = aes(x = as.character(fct_reorder(rownames(VV_cor)),VV), y = VV)) + geom_col()
ggplot(data = VV_cor, mapping = aes(x = as.character(fct_reorder(rownames(VV_cor)),VV), y = VV)) + geom_col()
ggplot(data = VV_cor, mapping = aes(x = rownames(VV_cor), y = VV)) + geom_col()
rownames(VV_cor) <- rownames(correlations)[-21]
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col()
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip()
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + title(" Correlations with VV")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + title(" Correlations with VV")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + ggtitle("Correlations with VV") + theme_classic()
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + ggtitle("Correlations with VV")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + labs(title ="Correlations with VV")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + labs(title ="Correlations with VV",align = "center")
# read data in
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
# format date & sort chronologically
stocks$Date <- as.Date(stocks$Date,'%d -%b-%y')
stocks <- stocks %>%
dplyr::arrange(Date)
# get log-returns of the data
logreturns <- function(x) {
log(x[-1]/x[-length(x)])
}
returns <- purrr::map_df(.x = stocks[,-1], .f = logreturns)
# compute correlations table
correlations <- as.data.frame(cor(returns))
# get only VV
library(ggplot2)
library(forcats)
VV_cor <- as.data.frame(correlations$VV[-nrow(correlations)])
colnames(VV_cor) <- "VV"
rownames(VV_cor) <- rownames(correlations)[-21]
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + labs(title ="Correlations with VV",align = "center")
# read data in
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
# format date & sort chronologically
stocks$Date <- as.Date(stocks$Date,'%d -%b-%y')
stocks <- stocks %>%
dplyr::arrange(Date)
# get log-returns of the data
logreturns <- function(x) {
log(x[-1]/x[-length(x)])
}
returns <- purrr::map_df(.x = stocks[,-1], .f = logreturns)
# compute correlations table
correlations <- as.data.frame(cor(returns))
# get only VV
library(ggplot2)
library(forcats)
VV_cor <- as.data.frame(correlations$VV[-nrow(correlations)])
colnames(VV_cor) <- "VV"
rownames(VV_cor) <- rownames(correlations)[-21]
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + labs(title ="Correlations with VV",align = "center")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + title ("Correlations with VV")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + ggtitle ("Correlations with VV")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + ggtitle ("        Correlations with VV")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + ggtitle ("                      Correlations with VV")
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation") + ggtitle ("                                       Correlations with VV")
install.packages("corrplot")
corrplot::corrplot(correlations)
corrplot::corrplot(correlations)
corrplot::corrplot(corr = correlations)
corrplot::corrplot(corr = as.matrix(correlations))
corrplot::corrplot(corr = as.matrix(correlations), title = "Correlation matrix")
corrplot::corrplot(corr = as.matrix(correlations), title = "Correlation plot")
corrplot::corrplot(corr = as.matrix(correlations), subtitle = "Correlation plot")
corrplot::corrplot(corr = as.matrix(correlations), title = "Correlation plot")
paste0(colnames(correlations),collapse = "+")
paste0(colnames(correlations)[-21],collapse = "+")
RandomModel <- lm(VV ~ GS + DD+ DOW + HON + HUN, JPM + KO + MMM+ XOM, data = returns)
RandomModel <- lm(VV ~ GS+DD+DOW+HON+HUN +JPM + KO + MMM+ XOM, data = returns)
summary(RandomModel)
car::vif(RandomModel,decreasing = T)
fullmodel <- lm(VV~formula, data = returns)
formula
form <- paste0(colnames(correlations)[-21],collapse = "+")
fullmodel <- lm(VV~form, data = returns)
form
eval(form)
fullmodel <- lm(VV~AA+BAC+BHI+CVX+DD+DOW+DPS+GS+HAL+HES+HON+HUN+JPM+KO+MMM+MPC+PEP+SLB+WFC+XOM, data = returns)
summary(fullmodel)
car::vif(fullmodel, decreasing = T)
fullmodel <- lm(VV~., data = returns)
fullmodel <- lm(VV~., data = returns)
summary(fullmodel)
fullmodel <- lm(VV~AA+BAC+BHI+CVX+DD+DOW+DPS+GS+HAL+HES+HON+HUN+JPM+KO+MMM+MPC+PEP+SLB+WFC+XOM, data = returns)
summary(fullmodel)
car::vif(fullmodel, decreasing = T)
corrplot::corrplot(corr = as.matrix(correlations))
library(car)
# somemodel
RandomModel <- lm(VV ~ GS+DD+DOW+HON+HUN +JPM + KO + MMM+ XOM, data = returns)
summary(RandomModel)
vifrandom <- sort(car::vif(RandomModel),decreasing = T)
knitr::kable(vifrandom, caption = "VIF of arbitary model")
# fullmodel
form <- paste0(colnames(correlations)[-21],collapse = "+")
fullmodel <- lm(VV~., data = returns)
summary(fullmodel)
viffm <- sort(car::vif(fullmodel), decreasing = T)
knitr::kable(viffm, caption = "VIF Full model")
viffm
corrplot::corrplot(corr = as.matrix(correlations))
library(car)
# somemodel
RandomModel <- lm(VV ~ GS+DD+DOW+HON+HUN +JPM + KO + MMM+ XOM, data = returns)
summary(RandomModel)
vifrandom <- as.data.frame(sort(car::vif(RandomModel),decreasing = T))
vifrandom$Model <- "Arbitary model"
knitr::kable(vifrandom, caption = "VIF of arbitary model")
# fullmodel
form <- paste0(colnames(correlations)[-21],collapse = "+")
fullmodel <- lm(VV~., data = returns)
summary(fullmodel)
viffm <- as.data.frame(sort(car::vif(fullmodel), decreasing = T))
viffm$Model <- "Full Model"
VIF <- rbind(vifrandom, viffm)
VIF <- rbind(vifrandom, viffm, row.names = F)
corrplot::corrplot(corr = as.matrix(correlations))
library(car)
# somemodel
RandomModel <- lm(VV ~ GS+DD+DOW+HON+HUN +JPM + KO + MMM+ XOM, data = returns)
summary(RandomModel)
vifrandom <- as.data.frame(sort(car::vif(RandomModel),decreasing = T))
vifrandom$Model <- "Arbitary model"
colnames(vifrandom) <- c("VIF", "Model")
knitr::kable(vifrandom, caption = "VIF of arbitary model")
# fullmodel
form <- paste0(colnames(correlations)[-21],collapse = "+")
fullmodel <- lm(VV~., data = returns)
summary(fullmodel)
viffm <- as.data.frame(sort(car::vif(fullmodel), decreasing = T))
viffm$Model <- "Full Model"
colnames(viffm) <- c("VIF", "Model")
VIF <- rbind(vifrandom, viffm, row.names = F)
knitr::kable(viffm, caption = "VIF Full model")
VIFReport <- VIF[1:nrow(VIF),] %>% dplyr::group_by(Model) %>%
dplyr::top_n(n =5,wt = VIF)
knitr::kable(VIFReport, caption = "VIF Full model")
VIFReport <- VIF[1:nrow(VIF)-1,] %>% dplyr::group_by(Model) %>%
dplyr::top_n(n =5,wt = VIF)
knitr::kable(VIFReport, caption = "VIF Full model")
knitr::kable(VIFReport, caption = "VIF Full model")%>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 1)
knitr::kable(VIFReport[,c("Model","VIF")], caption = "VIF Full model")%>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 2)
knitr::kable(VIFReport[,c("Model","VIF")], caption = "VIF Full model")%>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 2)
knitr::opts_chunk$set(echo = F,tidy.opts=list(width.cutoff=70),tidy=TRUE)
knitr::kable(VIFReport,"latex",caption = "VIF - Top 5 by model") %>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 1)
knitr::opts_chunk$set(echo = F,tidy.opts=list(width.cutoff=70),tidy=TRUE)
library(magrittr)
corrplot::corrplot(corr = as.matrix(correlations))
knitr::opts_chunk$set(echo = F,tidy.opts=list(width.cutoff=70),tidy=TRUE)
library(magrittr)
# read data in
stocks <- read.csv(file = 'stock_portfolio.csv', header = T)
# format date & sort chronologically
stocks$Date <- as.Date(stocks$Date,'%d -%b-%y')
stocks <- stocks %>%
dplyr::arrange(Date)
# get log-returns of the data
logreturns <- function(x) {
log(x[-1]/x[-length(x)])
}
returns <- purrr::map_df(.x = stocks[,-1], .f = logreturns)
# compute correlations table
correlations <- as.data.frame(cor(returns))
# get only VV
library(ggplot2)
library(forcats)
VV_cor <- as.data.frame(correlations$VV[-nrow(correlations)])
colnames(VV_cor) <- "VV"
rownames(VV_cor) <- rownames(correlations)[-21]
ggplot(data = VV_cor, mapping = aes(x = fct_reorder(rownames(VV_cor),VV), y = VV)) + geom_col() + coord_flip() + xlab("Stock Index") + ylab("Correlation")
#+ ggtitle ("                                       Correlations with VV")
corrplot::corrplot(corr = as.matrix(correlations))
library(car)
# somemodel
RandomModel <- lm(VV ~ GS+DD+DOW+HON+HUN +JPM + KO + MMM+ XOM, data = returns)
summary(RandomModel)
vifrandom <- as.data.frame(sort(car::vif(RandomModel),decreasing = T))
vifrandom$Model <- "Arbitary model"
colnames(vifrandom) <- c("VIF", "Model")
knitr::kable(vifrandom, caption = "VIF of arbitary model")
# fullmodel
form <- paste0(colnames(correlations)[-21],collapse = "+")
fullmodel <- lm(VV~., data = returns)
summary(fullmodel)
viffm <- as.data.frame(sort(car::vif(fullmodel), decreasing = T))
viffm$Model <- "Full Model"
colnames(viffm) <- c("VIF", "Model")
VIF <- rbind(vifrandom, viffm, row.names = F)
VIFReport <- VIF[1:nrow(VIF)-1,] %>% dplyr::group_by(Model) %>%
dplyr::top_n(n =5,wt = VIF)
knitr::kable(VIFReport[,c("Model","VIF")], caption = "VIF Full model")%>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 2)
View(viffm)
viffm <- as.data.frame(sort(car::vif(fullmodel), decreasing = T))
vif(fullmodel)
viffm
viffm$Predictors <- row.names(viffm)
corrplot::corrplot(corr = as.matrix(correlations))
library(car)
# somemodel
RandomModel <- lm(VV ~ GS+DD+DOW+HON+HUN +JPM + KO + MMM+ XOM, data = returns)
summary(RandomModel)
vifrandom <- as.data.frame(sort(car::vif(RandomModel),decreasing = T))
vifrandom$Model <- "Arbitary model"
vifrandom$Predictors <- row.names(vifrandom)
colnames(vifrandom) <- c("VIF", "Model", "Predictors")
knitr::kable(vifrandom, caption = "VIF of arbitary model")
# fullmodel
form <- paste0(colnames(correlations)[-21],collapse = "+")
fullmodel <- lm(VV~., data = returns)
summary(fullmodel)
viffm <- as.data.frame(sort(car::vif(fullmodel), decreasing = T))
viffm$Model <- "Full Model"
viffm$Predictors <- row.names(viffm)
colnames(viffm) <- c("VIF", "Model","Predictors")
VIF <- rbind(vifrandom, viffm, row.names = F)
VIFReport <- VIF[1:nrow(VIF)-1,] %>% dplyr::group_by(Model) %>%
dplyr::top_n(n =5,wt = VIF)
knitr::kable(VIFReport[,c("Model","VIF")], caption = "VIF Full model")%>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 2)
corrplot::corrplot(corr = as.matrix(correlations))
library(car)
# somemodel
RandomModel <- lm(VV ~ GS+DD+DOW+HON+HUN +JPM + KO + MMM+ XOM, data = returns)
summary(RandomModel)
vifrandom <- as.data.frame(sort(car::vif(RandomModel),decreasing = T))
vifrandom$Model <- "Arbitary model"
vifrandom$Predictors <- row.names(vifrandom)
colnames(vifrandom) <- c("VIF", "Model", "Predictors")
knitr::kable(vifrandom, caption = "VIF of arbitary model")
# fullmodel
form <- paste0(colnames(correlations)[-21],collapse = "+")
fullmodel <- lm(VV~., data = returns)
summary(fullmodel)
viffm <- as.data.frame(sort(car::vif(fullmodel), decreasing = T))
viffm$Model <- "Full Model"
viffm$Predictors <- row.names(viffm)
colnames(viffm) <- c("VIF", "Model","Predictors")
VIF <- rbind(vifrandom, viffm, row.names = F)
VIFReport <- VIF[1:nrow(VIF)-1,] %>% dplyr::group_by(Model) %>%
dplyr::top_n(n =5,wt = VIF)
knitr::kable(VIFReport[,c("Model","Predictors","VIF")], caption = "VIF Full model")%>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 2)
VIF <- rbind(vifrandom, viffm, row.names = F)
VIFReport <- VIF[1:nrow(VIF)-1,] %>% dplyr::group_by(Model) %>%
dplyr::top_n(n =5,wt = VIF)
knitr::kable(VIFReport[,c("Model","Predictors","VIF")], caption = "VIF Full model") %>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 1)
VIFReport <- VIFReport[,c("Model","Predictors","VIF")]
knitr::kable(VIFReport, "latex", caption = "VIF Full model") %>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = "Model")
knitr::kable(VIFReport, format = "latex",caption = "VIF Full model") %>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = "Model")
VIFReport <- VIFReport[,c("Model","Predictors","VIF")]
knitr::kable(VIFReport, format = "latex",caption = "VIF Full model") %>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = "Model")
knitr::kable(VIFReport, format = "latex",caption = "VIF Full model") %>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 1)
corrplot::corrplot(corr = as.matrix(correlations))
library(car)
# somemodel
RandomModel <- lm(VV ~ GS+DD+DOW+HON+HUN +JPM + KO + MMM+ XOM, data = returns)
summary(RandomModel)
vifrandom <- as.data.frame(sort(car::vif(RandomModel),decreasing = T))
vifrandom$Model <- "Arbitary model"
vifrandom$Predictors <- row.names(vifrandom)
colnames(vifrandom) <- c("VIF", "Model", "Predictors")
# fullmodel
form <- paste0(colnames(correlations)[-21],collapse = "+")
fullmodel <- lm(VV~., data = returns)
summary(fullmodel)
viffm <- as.data.frame(sort(car::vif(fullmodel), decreasing = T))
viffm$Model <- "Full Model"
viffm$Predictors <- row.names(viffm)
colnames(viffm) <- c("VIF", "Model","Predictors")
VIF <- rbind(vifrandom, viffm, row.names = F)
VIFReport <- VIF[1:nrow(VIF)-1,] %>% dplyr::group_by(Model) %>%
dplyr::top_n(n =5,wt = VIF)
VIFReport <- VIFReport[,c("Model","Predictors","VIF")]
knitr::kable(VIFReport, format = "latex",caption = "VIF Full model") %>%
kableExtra::kable_styling(latex_options = "striped") %>%
kableExtra::collapse_rows(columns = 1)
returns.pca <- princomp(returns)
summary(returns.pca)
summary(returns.pca, loadings = T)
plot(returns.pca)
returns.pca$scores
plot(returns.pca$scores[,1], returns.pca$scores[,2])
plot(returns.pca$loadings[,1], returns.pca$loadings[,2])
plot(returns.pca$loadings[,1], returns.pca$loadings[,2],color = "red")
